mutation CreateGeofenceEvent($input: CreateGeofenceEventInput!) {
    createGeofenceEvent(input: $input) {
        geofenceEvent {
            userId
            eventType
            timestamp
        }
    }
}

mutation UpdateUserInfo($input: UpdateUserInfoInput!){
    updateUserInfo(input: $input) {
        id,
        username
    }
}

mutation CreateUser($input: CreateUserInput!) {
    createUser(input: $input) {
        user {
            userId
        }
    }
}

mutation FollowUser($input: FollowUserInput!) {
    followUser(input: $input) {
        userId
    }
}

mutation UnfollowUser($input: UnfollowUserInput!) {
    unfollowUser(input: $input) {
        userId
    }
}

query CurrentUser {
    currentUser {
        user {
            ...userFields
            geofenceStatus
        }
    }
}

query GetUser($input: GetUserInput!) {
    getUser(input: $input) {
        user {
            ...userFields
        }
    }
}

query SearchUsers($input: SearchUsersInput!) {
    searchUsers(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}

query SearchUsersWithCursor($input: SearchUsersWithCursorInput!) {
    searchUsersWithCursor(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}

query GetFollowedUsers($input: GetFollowedUsersInput!) {
    getFollowedUsers(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}


query getFollowedUsersWithCursor($input: GetFollowedUsersWithCursorInput!) {
    getFollowedUsersWithCursor(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}

query GetFollowers($input: GetFollowersInput!) {
    getFollowers(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}

query GetFollowersWithCursor($input: GetFollowersWithCursorInput!) {
    getFollowersWithCursor(input: $input) {
        users {
            ...userFields
        }
        nextCursor
    }
}

query GetLeaderboardRange($input: LeaderboardRangeInput!) {
    getLeaderboardRange(input: $input) {
        users {
            ...userFields
        }
    }
}

query GetSocialLeaderboardRange($input: LeaderboardRangeInput!) {
    getSocialLeaderboardRange(input: $input) {
        users {
            ...userFields
        }
    }
}

fragment userFields on User {
    userId
    username
    score
    allTimeScore
    isCurrentUserFollowing
    followingCount
    followerCount
    avatar
    rank
}
